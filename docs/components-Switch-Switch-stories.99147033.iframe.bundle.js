"use strict";(self.webpackChunkmds=self.webpackChunkmds||[]).push([[2857],{"./src/components/Box/Box.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),lodash_get__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash/get.js"),lodash_get__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const BoxParent=styled_components__WEBPACK_IMPORTED_MODULE_2__.Ay.div(({theme,sx,withBorders,customBorderPadding,useBackground})=>{let extraBorders={};return withBorders&&(extraBorders={border:`${lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"borderColor","#eaeaea")} 1px solid`,borderRadius:2,padding:customBorderPadding||15}),{backgroundColor:useBackground?lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"boxBackground","#FBFAFA"):"transparent",...extraBorders,...sx}}),Box=({sx,children,customBorderPadding,...props})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(BoxParent,_extends({},props,{sx,customBorderPadding}),children),__WEBPACK_DEFAULT_EXPORT__=Box;try{Box.displayName="Box",Box.__docgenInfo={description:"",displayName:"Box",props:{sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"CSSObject"}},withBorders:{defaultValue:null,description:"",name:"withBorders",required:!1,type:{name:"boolean"}},customBorderPadding:{defaultValue:null,description:"",name:"customBorderPadding",required:!1,type:{name:"string | number"}},useBackground:{defaultValue:null,description:"",name:"useBackground",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Box/Box.tsx#Box"]={docgenInfo:Box.__docgenInfo,name:"Box",path:"src/components/Box/Box.tsx#Box"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Switch/Switch.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActiveDisabledSwitch:()=>ActiveDisabledSwitch,CustomIndicatorLabels:()=>CustomIndicatorLabels,Default:()=>Default,DisabledSwitch:()=>DisabledSwitch,OnlySwitch:()=>OnlySwitch,WithDescription:()=>WithDescription,WithTooltip:()=>WithTooltip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Switch__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Switch/Switch.tsx"),_utils_StoryThemeProvider__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/StoryThemeProvider.tsx"),_GlobalStyles_GlobalStyles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/GlobalStyles/GlobalStyles.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"MDS/Forms/Switch",component:_Switch__WEBPACK_IMPORTED_MODULE_1__.A,argTypes:{}},Template=({id,label,tooltip,sx,className,switchOnly,indicatorLabels,description,disabled,checked})=>{const[stateChecked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(checked);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils_StoryThemeProvider__WEBPACK_IMPORTED_MODULE_2__.A,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_GlobalStyles_GlobalStyles__WEBPACK_IMPORTED_MODULE_3__.A,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Switch__WEBPACK_IMPORTED_MODULE_1__.A,{id,label,tooltip,sx,className,switchOnly,indicatorLabels,description,checked:stateChecked,disabled,onClick:e=>{setChecked(e.target.checked)}}))},Default=Template.bind({});Default.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")}};const WithTooltip=Template.bind({});WithTooltip.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")},tooltip:"test"};const DisabledSwitch=Template.bind({});DisabledSwitch.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")},tooltip:"test",disabled:!0,checked:!1};const ActiveDisabledSwitch=Template.bind({});ActiveDisabledSwitch.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")},tooltip:"test",disabled:!0,checked:!0};const WithDescription=Template.bind({});WithDescription.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")},description:"This text describes what this switch is meant to do"};const CustomIndicatorLabels=Template.bind({});CustomIndicatorLabels.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")},description:"This text describes what this switch is meant to do",indicatorLabels:["Enabled","Disabled"]};const OnlySwitch=Template.bind({});OnlySwitch.args={label:"Click to confirm",id:"Switch",onClick:()=>{console.log("click")},switchOnly:!0,description:"This text describes what this switch is meant to do"};const __namedExportsOrder=["Default","WithTooltip","DisabledSwitch","ActiveDisabledSwitch","WithDescription","CustomIndicatorLabels","OnlySwitch"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...Default.parameters?.docs?.source}}},WithTooltip.parameters={...WithTooltip.parameters,docs:{...WithTooltip.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...WithTooltip.parameters?.docs?.source}}},DisabledSwitch.parameters={...DisabledSwitch.parameters,docs:{...DisabledSwitch.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...DisabledSwitch.parameters?.docs?.source}}},ActiveDisabledSwitch.parameters={...ActiveDisabledSwitch.parameters,docs:{...ActiveDisabledSwitch.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...ActiveDisabledSwitch.parameters?.docs?.source}}},WithDescription.parameters={...WithDescription.parameters,docs:{...WithDescription.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...WithDescription.parameters?.docs?.source}}},CustomIndicatorLabels.parameters={...CustomIndicatorLabels.parameters,docs:{...CustomIndicatorLabels.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...CustomIndicatorLabels.parameters?.docs?.source}}},OnlySwitch.parameters={...OnlySwitch.parameters,docs:{...OnlySwitch.parameters?.docs,source:{originalSource:"({\n  id,\n  label,\n  tooltip,\n  sx,\n  className,\n  switchOnly,\n  indicatorLabels,\n  description,\n  disabled,\n  checked\n}) => {\n  const [stateChecked, setChecked] = useState<boolean>(checked);\n  return <StoryThemeProvider>\r\n      <GlobalStyles />\r\n      <Switch id={id} label={label} tooltip={tooltip} sx={sx} className={className} switchOnly={switchOnly} indicatorLabels={indicatorLabels} description={description} checked={stateChecked} disabled={disabled} onClick={e => {\n      setChecked(e.target.checked);\n    }} />\r\n    </StoryThemeProvider>;\n}",...OnlySwitch.parameters?.docs?.source}}}},"./src/components/Switch/Switch.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),lodash_get__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/lodash/get.js"),lodash_get__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__),_InputLabel_InputLabel__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/InputLabel/InputLabel.tsx"),_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),_Icons_HelpIcon__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Icons/HelpIcon.tsx"),_Box_Box__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Box/Box.tsx"),_global_FieldContainer__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/global/FieldContainer.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const SwitchIndicator=styled_components__WEBPACK_IMPORTED_MODULE_7__.Ay.span(({theme,active})=>({fontSize:12,color:active?lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.onLabelColor","#081C42"):lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.offLabelColor","#E2E2E2"),margin:"0 8px 0 10px",fontWeight:active?"bold":"normal"})),SwitchItem=styled_components__WEBPACK_IMPORTED_MODULE_7__.Ay.label(({theme})=>({width:54,height:24,position:"relative","& .switchRail":{position:"relative",display:"block",width:54,height:24,borderRadius:24,padding:2,boxShadow:"inset 0px 1px 3px rgba(0,0,0,0.1)"},"& input":{display:"none","& ~.switchRail":{backgroundColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.switchBackground","#E6EBEB"),"&:before":{content:"' '",position:"absolute",display:"block",width:22,height:22,top:1,left:1,borderRadius:"100%",border:`${lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.bulletBorderColor","#FFF")} 2px solid `,backgroundColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.bulletBGColor","#F1F4F4"),transitionDuration:"0.1s"}},"&:checked ~.switchRail":{backgroundColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.onBackgroundColor","#4CCB92"),"&:before":{left:"calc(100% - 23px)"}},"&:disabled:checked ~.switchRail":{backgroundColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.disabledOnBackground","#8bb0a0")},"&:disabled ~.switchRail":{cursor:"not-allowed",backgroundColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.disabledBackground","#E6EAEB"),"&:before":{borderColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.disabledBulletBorderColor","#F1F4F4"),backgroundColor:lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme,"switchButton.disabledBulletBGColor","#E6EAEB")}}}})),SwitchContainer=styled_components__WEBPACK_IMPORTED_MODULE_7__.Ay.div(()=>({display:"flex",alignItems:"center"})),SwitchMainContainer=styled_components__WEBPACK_IMPORTED_MODULE_7__.Ay.div(({theme,sx})=>({"& .inputBase":{display:"flex",justifyContent:"space-between",alignItems:"center",flexBasis:"initial",flexWrap:"nowrap"},"& .actionDescription":{marginTop:4,padding:"0 10px",color:"#999999"},...sx})),Switch=({tooltip,label,id,sx,className,switchOnly,indicatorLabels,description,checked,helpTip,helpTipPlacement,...props})=>{const switchComponent=react__WEBPACK_IMPORTED_MODULE_0__.createElement(SwitchContainer,null,!switchOnly&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(SwitchIndicator,{active:!checked},indicatorLabels&&indicatorLabels.length>1?indicatorLabels[1]:"OFF"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(SwitchItem,{id:`${id}-switch`},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",_extends({type:"checkbox",id,checked},props)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"switchRail"})),!switchOnly&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(SwitchIndicator,{active:!!checked},indicatorLabels?indicatorLabels[0]:"ON"));return switchOnly?switchComponent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(SwitchMainContainer,{className:`inputItem ${className||""}`,sx},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_global_FieldContainer__WEBPACK_IMPORTED_MODULE_6__.A,{className:"inputBase"},""!==label&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_InputLabel_InputLabel__WEBPACK_IMPORTED_MODULE_2__.A,{htmlFor:id,noMinWidth:!0,helpTip,helpTipPlacement},label,tooltip&&""!==tooltip&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"tooltipContainer"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.A,{tooltip,placement:"top"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icons_HelpIcon__WEBPACK_IMPORTED_MODULE_4__.A,null)))),switchComponent),description&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Box_Box__WEBPACK_IMPORTED_MODULE_5__.A,{className:"actionDescription"},description))},__WEBPACK_DEFAULT_EXPORT__=Switch;try{Switch.displayName="Switch",Switch.__docgenInfo={description:"",displayName:"Switch",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},tooltip:{defaultValue:null,description:"",name:"tooltip",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"CSSObject"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},switchOnly:{defaultValue:null,description:"",name:"switchOnly",required:!1,type:{name:"boolean"}},indicatorLabels:{defaultValue:null,description:"",name:"indicatorLabels",required:!1,type:{name:"string[]"}},description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"string"}},helpTip:{defaultValue:null,description:"",name:"helpTip",required:!1,type:{name:"ReactNode"}},helpTipPlacement:{defaultValue:null,description:"",name:"helpTipPlacement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Switch/Switch.tsx#Switch"]={docgenInfo:Switch.__docgenInfo,name:"Switch",path:"src/components/Switch/Switch.tsx#Switch"})}catch(__react_docgen_typescript_loader_error){}}}]);