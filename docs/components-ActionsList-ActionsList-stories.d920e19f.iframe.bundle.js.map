{"version":3,"file":"components-ActionsList-ActionsList-stories.d920e19f.iframe.bundle.js","mappings":";AAyCA;;;;;;;;ACAA;;;;AASA;;;AAMA","sources":["webpack://mds/./src/components/GlobalStyles/GlobalStyles.tsx","webpack://mds/./src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["// This file is part of MinIO Design System\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport get from \"lodash/get\";\r\nimport { darkColors, lightColors } from \"../../global/themes\";\r\n\r\nconst InterBlackWoff = require(\"../assets/fonts/Inter/Inter-Black.woff\");\r\nconst InterBlackItalicWoff = require(\"../assets/fonts/Inter/Inter-BlackItalic.woff\");\r\nconst InterBoldWoff = require(\"../assets/fonts/Inter/Inter-Bold.woff\");\r\nconst InterBoldItalicWoff = require(\"../assets/fonts/Inter/Inter-BoldItalic.woff\");\r\nconst InterItalicWoff = require(\"../assets/fonts/Inter/Inter-Italic.woff\");\r\nconst InterLightWoff = require(\"../assets/fonts/Inter/Inter-Light.woff\");\r\nconst InterLightItalicWoff = require(\"../assets/fonts/Inter/Inter-LightItalic.woff\");\r\nconst InterRegularWoff = require(\"../assets/fonts/Inter/Inter-Regular.woff\");\r\nconst InterThinWoff = require(\"../assets/fonts/Inter/Inter-Thin.woff\");\r\nconst InterBlackWoff2 = require(\"../assets/fonts/Inter/Inter-Black.woff2\");\r\nconst InterBlackItalicWoff2 = require(\"../assets/fonts/Inter/Inter-BlackItalic.woff2\");\r\nconst InterBoldWoff2 = require(\"../assets/fonts/Inter/Inter-Bold.woff2\");\r\nconst InterBoldItalicWoff2 = require(\"../assets/fonts/Inter/Inter-BoldItalic.woff2\");\r\nconst InterItalicWoff2 = require(\"../assets/fonts/Inter/Inter-Italic.woff2\");\r\nconst InterLightWoff2 = require(\"../assets/fonts/Inter/Inter-Light.woff2\");\r\nconst InterLightItalicWoff2 = require(\"../assets/fonts/Inter/Inter-LightItalic.woff2\");\r\nconst InterRegularWoff2 = require(\"../assets/fonts/Inter/Inter-Regular.woff2\");\r\nconst InterThinWoff2 = require(\"../assets/fonts/Inter/Inter-Thin.woff2\");\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${({ theme }) => {\r\n      return `\r\n    /* Fonts */\r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterBlackItalicWoff2}) format(\"woff2\"),\r\n        url(${InterBlackItalicWoff}) format(\"woff\");\r\n      font-weight: 900;\r\n      font-style: italic;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterBoldWoff2}) format(\"woff2\"),\r\n        url(${InterBoldWoff}) format(\"woff\");\r\n      font-weight: bold;\r\n      font-style: normal;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterBoldItalicWoff2}) format(\"woff2\"),\r\n        url(${InterBoldItalicWoff}) format(\"woff\");\r\n      font-weight: bold;\r\n      font-style: italic;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterLightWoff2}) format(\"woff2\"),\r\n        url(${InterLightWoff}) format(\"woff\");\r\n      font-weight: 300;\r\n      font-style: normal;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterBlackWoff2}) format(\"woff2\"),\r\n        url(${InterBlackWoff}) format(\"woff\");\r\n      font-weight: 900;\r\n      font-style: normal;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterItalicWoff2}) format(\"woff2\"),\r\n        url(${InterItalicWoff}) format(\"woff\");\r\n      font-weight: normal;\r\n      font-style: italic;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterRegularWoff2}) format(\"woff2\"),\r\n        url(${InterRegularWoff}) format(\"woff\");\r\n      font-weight: normal;\r\n      font-style: normal;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterLightItalicWoff2}) format(\"woff2\"),\r\n        url(${InterLightItalicWoff}) format(\"woff\");\r\n      font-weight: 300;\r\n      font-style: italic;\r\n      font-display: swap;\r\n    }\r\n    \r\n    @font-face {\r\n      font-family: \"Inter\";\r\n      src: url(${InterThinWoff2}) format(\"woff2\"),\r\n        url(${InterThinWoff}) format(\"woff\");\r\n      font-weight: 100;\r\n      font-style: normal;\r\n      font-display: swap;\r\n    }\r\n    \r\n    /* Main Page styling */\r\n    \r\n    *, *::before, *::after {\r\n       box-sizing: inherit;\r\n       outline:0;\r\n    }\r\n    \r\n    html {\r\n        box-sizing: border-box;\r\n        -webkit-text-size-adjust: 100%;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n    \r\n    body {\r\n        background-color: ${get(theme, \"bgColor\", lightColors.white)};\r\n        color: ${get(theme, \"fontColor\", lightColors.defaultFontColor)};\r\n        height: 100vh;\r\n        width: 100vw;\r\n        font-family: 'Inter', sans-serif;\r\n        margin: 0;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        font-weight: 400;\r\n        font-size: 14px;\r\n        line-height: 1.5;\r\n        transition: background-color 0s\r\n    }\r\n    \r\n    fieldset, section {\r\n        border: 1px solid ${get(theme, \"borderColor\", lightColors.borderColor)};\r\n        border-radius: 3px;\r\n        background-color: transparent;\r\n        padding: 25px;\r\n    }\r\n    \r\n    a {\r\n        color: ${get(theme, \"linkColor\", lightColors.linkColor)};\r\n    }\r\n    \r\n    a:hover {\r\n        color: ${get(theme, \"linkColor\", lightColors.linkColor)};\r\n    }\r\n    \r\n    hr {\r\n        border-top: 0;\r\n        border-left: 0;\r\n        border-right: 0;\r\n        border-color: ${get(theme, \"borderColor\", lightColors.borderColor)};\r\n        background-color: transparent;\r\n    }\r\n    \r\n    ul {\r\n        padding-left: 20px;\r\n        list-style: none;\r\n        \r\n        li:not([class*=\"Mui\"])::before {\r\n          content: '￭';\r\n          color: ${get(theme, \"bulletColor\", lightColors.bulletColor)};\r\n          font-size: 20px;\r\n          display: inline-block;\r\n          width: 1em;\r\n          margin-left: -1em;\r\n        }\r\n        \r\n        ul {\r\n          list-style: none;\r\n          li:not([class*=\"Mui\"])::before {\r\n            content: \"￮\";\r\n            color: ${get(theme, \"bulletColor\", lightColors.bulletColor)},\r\n            font-size: 20px;\r\n            display: inline-block;\r\n            width: 1em;\r\n            margin-left: -1em;\r\n          }\r\n        }\r\n      }\r\n      \r\n    button:active, button:focus, input: active, input:focus {\r\n        outline: 0;\r\n    }\r\n    \r\n    .min-icon {\r\n        width: 26px;\r\n    }\r\n    \r\n    #root: {\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-flow: column;\r\n        align-items: stretch;\r\n      }\r\n    \r\n    #preload {\r\n      display: none;\r\n    }\r\n    \r\n    #loader-block {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n      height: 100vh;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    \r\n    .muted {\r\n        color: ${get(theme, \"mutedText\", lightColors.mutedText)};\r\n    }\r\n    `;\r\n    }}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","// This file is part of MinIO Design System\r\n// Copyright (c) 2022 MinIO, Inc.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nimport React, {\r\n  cloneElement,\r\n  FC,\r\n  Fragment,\r\n  HTMLAttributes,\r\n  useState,\r\n} from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\nimport { createPortal } from \"react-dom\";\r\nimport get from \"lodash/get\";\r\nimport {\r\n  TooltipBuild,\r\n  TooltipConstructProps,\r\n  TooltipProps,\r\n} from \"./Tooltip.types\";\r\n\r\nconst opacityAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst TooltipWrapper = styled.span<HTMLAttributes<HTMLDivElement>>(\r\n  {\r\n    display: \"inline-flex\",\r\n    position: \"relative\",\r\n  },\r\n  css`\r\n    &:hover {\r\n      & .tooltipElement {\r\n        display: block;\r\n        animation: ${opacityAnimation} 1s;\r\n      }\r\n    }\r\n  `,\r\n);\r\n\r\nconst TooltipItem = styled.div<TooltipBuild>(({ theme, placement }) => {\r\n  const tooltipArrowSize = \"6px\";\r\n\r\n  const background = get(theme, \"tooltip.background\", \"#737373\");\r\n  const textColor = get(theme, \"tooltip.color\", \"#FFFFFF\");\r\n\r\n  let placementPosition = {};\r\n  const beforePosition = {\r\n    content: \"' '\",\r\n    left: \"50%\",\r\n    border: \"solid transparent\",\r\n    height: 0,\r\n    width: 0,\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    borderWidth: tooltipArrowSize,\r\n    marginLeft: `calc(${tooltipArrowSize} * -1);`,\r\n  };\r\n\r\n  switch (placement) {\r\n    case \"top\":\r\n      placementPosition = {\r\n        transform: \"translateX(-50%) translateY(-50%)\",\r\n        \"&::before\": {\r\n          ...beforePosition,\r\n          top: \"100%\",\r\n          borderTopColor: background,\r\n        },\r\n      };\r\n      break;\r\n    case \"right\":\r\n      placementPosition = {\r\n        transform: \"translateX(0) translateY(-50%)\",\r\n        \"&::before\": {\r\n          ...beforePosition,\r\n          left: `calc(${tooltipArrowSize} * -1)`,\r\n          top: \"50%\",\r\n          transform: \"translateX(0) translateY(-50%)\",\r\n          borderRightColor: background,\r\n        },\r\n      };\r\n      break;\r\n    case \"left\":\r\n      placementPosition = {\r\n        transform: \"translateX(-100%) translateY(-50%)\",\r\n        \"&::before\": {\r\n          ...beforePosition,\r\n          left: \"auto\",\r\n          right: `calc(${tooltipArrowSize} * -2)`,\r\n          top: \"50%\",\r\n          transform: \"translateX(0) translateY(-50%)\",\r\n          borderLeftColor: background,\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      placementPosition = {\r\n        transform: \"translateX(-50%)\",\r\n        \"&::before\": {\r\n          ...beforePosition,\r\n          bottom: \"100%\",\r\n          borderBottomColor: background,\r\n        },\r\n      };\r\n  }\r\n\r\n  return {\r\n    position: \"fixed\",\r\n    borderRadius: 4,\r\n    color: textColor,\r\n    background: background,\r\n    lineHeight: 1,\r\n    zIndex: 10001,\r\n    padding: 8,\r\n    fontSize: 12,\r\n    boxShadow: \"#00000050 0px 3px 10px\",\r\n    maxWidth: 350,\r\n    ...placementPosition,\r\n  };\r\n});\r\n\r\nconst TooltipElement: FC<TooltipConstructProps> = ({\r\n  placement,\r\n  content,\r\n  anchorEl,\r\n}) => {\r\n  let position = {};\r\n  let calculatedPlacement = placement;\r\n  const boundYLimit = 45;\r\n  const boundXLimit = 175;\r\n\r\n  if (anchorEl) {\r\n    const bounds = anchorEl.getBoundingClientRect();\r\n    const windowWidth = document.documentElement.offsetWidth;\r\n    const windowHeight = document.documentElement.offsetHeight;\r\n\r\n    switch (placement) {\r\n      case \"bottom\":\r\n        const calcPosition = bounds.top + bounds.height + boundYLimit;\r\n\r\n        if (calcPosition > windowHeight) {\r\n          calculatedPlacement = \"top\";\r\n        }\r\n        break;\r\n      case \"left\":\r\n        const calcInitPosition = bounds.left - boundXLimit;\r\n\r\n        if (calcInitPosition < 0) {\r\n          calculatedPlacement = \"right\";\r\n        }\r\n\r\n        break;\r\n      case \"right\":\r\n        const calcEndPosition = bounds.left + bounds.width + boundXLimit;\r\n\r\n        if (calcEndPosition > windowWidth) {\r\n          calculatedPlacement = \"left\";\r\n        }\r\n        break;\r\n      case \"top\":\r\n        if (bounds.top < boundYLimit) {\r\n          calculatedPlacement = \"bottom\";\r\n        }\r\n\r\n        break;\r\n    }\r\n\r\n    switch (calculatedPlacement) {\r\n      case \"bottom\":\r\n        position = {\r\n          top: bounds.top + bounds.height + 10,\r\n          left: bounds.left + bounds.width / 2,\r\n        };\r\n        break;\r\n      case \"left\":\r\n        position = {\r\n          top: bounds.top + bounds.height / 2,\r\n          left: bounds.left - 12,\r\n        };\r\n        break;\r\n      case \"right\":\r\n        position = {\r\n          top: bounds.top + bounds.height / 2,\r\n          left: bounds.left + bounds.width + 12,\r\n        };\r\n        break;\r\n      case \"top\":\r\n        position = {\r\n          top: bounds.top - bounds.height / 2 - 10,\r\n          left: bounds.left + bounds.width / 2,\r\n        };\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TooltipItem placement={calculatedPlacement} style={position}>\r\n      {content}\r\n    </TooltipItem>\r\n  );\r\n};\r\n\r\nconst Tooltip: FC<TooltipProps> = ({\r\n  children,\r\n  tooltip,\r\n  errorProps,\r\n  placement = \"bottom\",\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState<\r\n    (EventTarget & HTMLSpanElement) | null\r\n  >(null);\r\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\r\n\r\n  if (tooltip === \"\") {\r\n    return (\r\n      <Fragment>\r\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <TooltipWrapper\r\n        onPointerEnter={(event) => {\r\n          setAnchorEl(event.currentTarget);\r\n          setTooltipVisible(true);\r\n        }}\r\n        onPointerLeave={() => {\r\n          setTooltipVisible(false);\r\n        }}\r\n      >\r\n        {errorProps ? cloneElement(children, { ...errorProps }) : children}\r\n        {tooltipVisible &&\r\n          createPortal(\r\n            <TooltipElement\r\n              placement={placement}\r\n              content={tooltip}\r\n              anchorEl={anchorEl}\r\n            />,\r\n            document.body,\r\n          )}\r\n      </TooltipWrapper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n"],"names":[],"sourceRoot":""}